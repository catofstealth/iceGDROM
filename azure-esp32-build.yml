# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- agent-pipeline

pool: 'Linux RISC V'

steps:
- script: |
    echo Creating base folder
    ls -al /opt
  displayName: 'Setup folders'
  
- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'specific'
    project: '4a84c380-a821-47d4-b896-7219ca36222f'
    pipeline: '11'
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'toolchain'
    downloadPath: '/opt'
  displayName: 'Download Cross Compiler Toolchain for SH4/ARM'

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'specific'
    project: '4a84c380-a821-47d4-b896-7219ca36222f'
    pipeline: '10'
    buildVersionToDownload: 'latest'
    downloadType: 'specific'
    artifactName: 'bin'
    itemPattern: '**'
    downloadPath: '/opt/makeip/'
  displayName: 'Download MakeIP tool for DC'

- script: |
    ls -al /opt/makeip/bin/
    chmod +x /opt/makeip/bin/*
    chmod +x /opt/toolchain/sh-elf/bin/*
    chmod +x /opt/toolchain/arm-eabi/bin/*
    echo Downloading prebuild binaries
    # wget -c https://github.com/stnolting/riscv-gcc-prebuilt/releases/download/rv32i-4.0.0/riscv32-unknown-elf.gcc-12.1.0.tar.gz -O - | sudo tar -xz -C /opt/riscv
    
    # echo Installing packages
    # sudo apt-get update
    # sudo apt-get install yosys arachne-pnr fpga-icestorm nextpnr-ice40 mkisofs gcc-sh4-linux-gnu
  displayName: 'Setup prerequisites'

- script: |
    echo Adding Path
    export PATH=$PATH:/opt/riscv/bin
    export PATH=$PATH:/opt/makeip/bin
    export PATH=$PATH:/opt/toolchain/sh-elf/bin
    export PATH=$PATH:/opt/toolchain/arm-eabi/bin
    echo $PATH
    echo Testing binaries
    riscv32-unknown-elf-gcc -v
  displayName: 'Setup paths'
  enabled: false





- script: |
    echo $PATH
    echo Adding Path
    export PATH=$PATH:/opt/riscv/bin
    export PATH=$PATH:/opt/makeip/bin
    export PATH=$PATH:/opt/toolchain/sh-elf/bin
    export PATH=$PATH:/opt/toolchain/arm-eabi/bin
    mkdir $(Build.ArtifactStagingDirectory)/tools
    make ci
  displayName: 'Build all (make in root)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      GNUmakefile
      fpga/obj/gdrom_hw_emulator.bin
      test/obj/*.GI0
      tools/obj/makegdimg
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Artifacts'
    publishLocation: 'Container'
